name: dibs CI

on: [push]

jobs:
  dibs-amd64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install dibs
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          curl -Lo /tmp/docker-buildx https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
          mkdir -p ~/.docker/cli-plugins/
          install /tmp/docker-buildx ~/.docker/cli-plugins
          docker buildx create --name dibs
          docker buildx use dibs
          docker buildx inspect --bootstrap
          curl -L https://get.helm.sh/helm-v3.1.1-linux-amd64.tar.gz | tar -zvxf - linux-amd64/helm -O >/tmp/helm
          sudo install /tmp/helm /usr/local/bin
          curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar -zvxf - ghr_v0.13.0_linux_amd64/ghr
          sudo install ghr_v0.13.0_linux_amd64/ghr /usr/local/bin
          curl -L https://github.com/helm/chart-releaser/releases/download/v0.2.3/chart-releaser_0.2.3_linux_amd64.tar.gz | tar -zvxf - cr
          sudo install cr /usr/local/bin
          curl -Lo /tmp/dibs https://nx904.your-storageshare.de/s/ZWxkmmQW37fHt9J/download
          sudo install /tmp/dibs /usr/local/bin
      - name: Login to docker
        run: docker login ${DOCKER_REGISTRY} --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Run uit tests
        run: dibs -unitTests -target '*' -platform linux/amd64 -docker
      - name: Run integration tests
        run: dibs -integrationTests -target '*' -platform linux/amd64 -docker
      - name: Build images
        run: |
          dibs -buildImage -target '*' -platform linux/amd64
          dibs -buildImage -target '*' -platform linux/arm64
      - name: Run image tests
        run: dibs -imageTests -target '*' -platform linux/amd64
      - name: Push images
        run: |
          dibs -pushImage -target '*' -platform linux/amd64
          dibs -pushImage -target '*' -platform linux/arm64
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Build manifest
        run: dibs -buildManifest -target '*'
      - name: Push manifest
        run: dibs -pushManifest -target '*'
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Build binaries
        run: |
          dibs -build -target '*' -platform linux/amd64 -docker
          dibs -build -target '*' -platform linux/arm64 -docker
      - name: Push binaries
        run: |
          dibs -pushBinary -target '*' -platform linux/amd64
          dibs -pushBinary -target '*' -platform linux/arm64
        env:
          DIBS_GITHUB_USER_NAME: ${{ secrets.DIBS_GITHUB_USER_NAME }}
          DIBS_GITHUB_TOKEN: ${{ secrets.DIBS_GITHUB_TOKEN }}
          DIBS_GITHUB_REPOSITORY: ${{ secrets.DIBS_GITHUB_REPOSITORY }}
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Run chart tests
        run: dibs -chartTests -target '*' -platform linux/amd64 -docker
      - name: Run build chart
        run: dibs -buildChart -target '*'
      - name: Push chart
        run: dibs -pushChart -target '*'
        env:
          DIBS_GITHUB_USER_NAME: ${{ secrets.DIBS_GITHUB_USER_NAME }}
          DIBS_GITHUB_TOKEN: ${{ secrets.DIBS_GITHUB_TOKEN }}
          DIBS_GITHUB_REPOSITORY: ${{ secrets.DIBS_GITHUB_REPOSITORY }}
          DIBS_GITHUB_REPOSITORY_NAME: ${{ secrets.DIBS_GITHUB_REPOSITORY_NAME }}
          DIBS_GITHUB_REPOSITORY_URL: ${{ secrets.DIBS_GITHUB_REPOSITORY_URL }}
          DIBS_GITHUB_PAGES_URL: ${{ secrets.DIBS_GITHUB_PAGES_URL }}
          DIBS_GIT_USER_NAME: ${{ secrets.DIBS_GIT_USER_NAME }}
          DIBS_GIT_USER_EMAIL: ${{ secrets.DIBS_GIT_USER_EMAIL }}
          DIBS_GIT_COMMIT_MESSAGE: ${{ secrets.DIBS_GIT_COMMIT_MESSAGE }}
        if: startsWith(github.ref, 'refs/tags/v')
