#!/bin/bash

set -e

# Post-processing
if [ "$1" = "suffix" ]; then
    if [ "$3" = "staticx" ]; then
        # Make binaries static by patching them and including their dependencies
        apt update
        apt install -y python3-pip patchelf scons
        pip3 install staticx
    fi

    for file in out/*; do
        if [ "$3" = "staticx" ]; then
            staticx "${file}" "${file}.static.$2"
        fi
        mv "${file}" "${file}.$2"
    done

    exit 0
fi

# Build
apt update
apt install -y protobuf-compiler build-essential automake

# Clients
if [ "$1" = "clients" ]; then
    apt install -y libssl-dev

    make depend

    apt install -y curl

    curl -L -o /tmp/bagop "https://github.com/pojntfx/bagop/releases/latest/download/bagop.linux-$(uname -m)"
    install /tmp/bagop /usr/local/bin

    CGO_ENABLED=0 bagop -j "$(nproc)" -b edgectl -x '(android/*|ios/*|aix/ppc64|plan9/386|plan9/amd64|plan9/arm)' -p 'make build/edgectl DST=$DST' -d out
    CGO_ENABLED=0 bagop -j "$(nproc)" -b supernodectl -x '(android/*|ios/*|aix/ppc64|plan9/386|plan9/amd64|plan9/arm)' -p 'make build/supernodectl DST=$DST' -d out

    exit 0
fi

# Servers
if [ "$1" = "386" ]; then
    # i386
    dpkg --add-architecture i386

    apt update
    apt install -y gcc-i686-linux-gnu libssl-dev:i386

    export CC=i686-linux-gnu-gcc
    make depend

    export CGO_ENABLED=1
    export GOARCH=386
    make build/edged build/supernoded -j "$(nproc)"
elif [ "$1" = "amd64" ]; then
    # amd64
    dpkg --add-architecture amd64

    apt update
    apt install -y gcc-x86-64-linux-gnu libssl-dev:amd64

    export CC=x86_64-linux-gnu-gcc
    make depend

    export CGO_ENABLED=1
    export GOARCH=amd64
    make build/edged build/supernoded -j "$(nproc)"
elif [ "$1" = "arm64" ]; then
    # arm64
    dpkg --add-architecture arm64

    apt update
    apt install -y gcc-aarch64-linux-gnu libssl-dev:arm64

    export CC=aarch64-linux-gnu-gcc
    make depend

    export CGO_ENABLED=1
    export GOARCH=arm64
    make build/edged build/supernoded -j "$(nproc)"
elif [ "$1" = "arm" ]; then
    # arm
    dpkg --add-architecture armhf

    apt update
    apt install -y gcc-arm-linux-gnueabihf libssl-dev:armhf

    export CC=arm-linux-gnueabihf-gcc
    make depend

    export CGO_ENABLED=1
    export GOARCH=arm
    make build/edged build/supernoded -j "$(nproc)"
elif [ "$1" = "riscv64" ]; then
    # riscv64 (Go, Debian port)
    apt install -y golang git ca-certificates debian-ports-archive-keyring
    printf "deb http://ftp.ports.debian.org/debian-ports unstable main\ndeb http://ftp.ports.debian.org/debian-ports unreleased main\ndeb http://ftp.ports.debian.org/debian-ports experimental main" >>/etc/apt/sources.list
    export PATH="$PATH:/${HOME}/go/bin"
    dpkg --add-architecture riscv64

    apt update
    apt install -y gcc-riscv64-linux-gnu libssl-dev:riscv64

    export CC=riscv64-linux-gnu-gcc
    make depend

    export CGO_ENABLED=1
    export GOARCH=riscv64
    make build/edged build/supernoded -j "$(nproc)"
elif [ "$1" = "ppc" ]; then
    # ppc (gccgo, Debian port)
    apt install -y golang git ca-certificates debian-ports-archive-keyring
    printf "deb http://ftp.ports.debian.org/debian-ports unstable main\ndeb http://ftp.ports.debian.org/debian-ports unreleased main\ndeb http://ftp.ports.debian.org/debian-ports experimental main" >>/etc/apt/sources.list
    export PATH="$PATH:/${HOME}/go/bin"
    dpkg --add-architecture powerpc

    apt update
    apt install -y gccgo-powerpc-linux-gnu gcc-powerpc-linux-gnu

    # Hack: We can't install `libc:powerpc`, but we don't need it
    ORIGINAL_PWD="$(pwd)"
    mkdir -p /tmp/libssl-dev
    cd /tmp/libssl-dev
    apt-get download libssl-dev:powerpc
    dpkg -i --force-all ./*.deb
    cd "${ORIGINAL_PWD}"

    export CC=powerpc-linux-gnu-gcc
    make depend

    # Hack: gccgo lacks a syscall
    chmod +w /root/go/pkg/mod/google.golang.org/grpc@*/internal/channelz/types_linux.go
    sed -i 's/SO_SNDTIMEO/SO_RCVTIMEO/' /root/go/pkg/mod/google.golang.org/grpc@*/internal/channelz/types_linux.go

    # Build dynamically-linked
    export CGO_ENABLED=1
    export GOARCH=ppc
    export GCCGO=powerpc-linux-gnu-gccgo
    export GOFLAGS='-compiler=gccgo -gccgoflags=-static-libgo'
    make -j "$(nproc)"

    # Build statically-linked (`staticx` does not work on this platform)
    export GOFLAGS='-compiler=gccgo -gccgoflags=-static'
    make OUTPUT_DIR=out/static -j "$(nproc)"
    for file in out/static/*; do
        mv "${file}" "${file}.static"
        mv "${file}.static" out/
    done

    rm -rf out/static

    # Hack: Remove the broken `libssl-dev:powerpc` package
    apt --fix-broken -y install
else
    # Host architecture
    apt install -y libssl-dev

    make depend

    make build/edged build/supernoded -j "$(nproc)"
fi
