// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supernode.proto

package gon2n

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SupernodeManagerCreateArgs struct {
	ListenPort           int64    `protobuf:"varint,1,opt,name=ListenPort,proto3" json:"ListenPort,omitempty"`
	ManagementPort       int64    `protobuf:"varint,2,opt,name=ManagementPort,proto3" json:"ManagementPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerCreateArgs) Reset()         { *m = SupernodeManagerCreateArgs{} }
func (m *SupernodeManagerCreateArgs) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerCreateArgs) ProtoMessage()    {}
func (*SupernodeManagerCreateArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{0}
}

func (m *SupernodeManagerCreateArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerCreateArgs.Unmarshal(m, b)
}
func (m *SupernodeManagerCreateArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerCreateArgs.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerCreateArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerCreateArgs.Merge(m, src)
}
func (m *SupernodeManagerCreateArgs) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerCreateArgs.Size(m)
}
func (m *SupernodeManagerCreateArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerCreateArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerCreateArgs proto.InternalMessageInfo

func (m *SupernodeManagerCreateArgs) GetListenPort() int64 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

func (m *SupernodeManagerCreateArgs) GetManagementPort() int64 {
	if m != nil {
		return m.ManagementPort
	}
	return 0
}

type SupernodeManagerListArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerListArgs) Reset()         { *m = SupernodeManagerListArgs{} }
func (m *SupernodeManagerListArgs) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerListArgs) ProtoMessage()    {}
func (*SupernodeManagerListArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{1}
}

func (m *SupernodeManagerListArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerListArgs.Unmarshal(m, b)
}
func (m *SupernodeManagerListArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerListArgs.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerListArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerListArgs.Merge(m, src)
}
func (m *SupernodeManagerListArgs) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerListArgs.Size(m)
}
func (m *SupernodeManagerListArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerListArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerListArgs proto.InternalMessageInfo

type SupernodeManagerGetArgs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerGetArgs) Reset()         { *m = SupernodeManagerGetArgs{} }
func (m *SupernodeManagerGetArgs) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerGetArgs) ProtoMessage()    {}
func (*SupernodeManagerGetArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{2}
}

func (m *SupernodeManagerGetArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerGetArgs.Unmarshal(m, b)
}
func (m *SupernodeManagerGetArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerGetArgs.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerGetArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerGetArgs.Merge(m, src)
}
func (m *SupernodeManagerGetArgs) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerGetArgs.Size(m)
}
func (m *SupernodeManagerGetArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerGetArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerGetArgs proto.InternalMessageInfo

func (m *SupernodeManagerGetArgs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SupernodeManagerDeleteArgs struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerDeleteArgs) Reset()         { *m = SupernodeManagerDeleteArgs{} }
func (m *SupernodeManagerDeleteArgs) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerDeleteArgs) ProtoMessage()    {}
func (*SupernodeManagerDeleteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{3}
}

func (m *SupernodeManagerDeleteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerDeleteArgs.Unmarshal(m, b)
}
func (m *SupernodeManagerDeleteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerDeleteArgs.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerDeleteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerDeleteArgs.Merge(m, src)
}
func (m *SupernodeManagerDeleteArgs) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerDeleteArgs.Size(m)
}
func (m *SupernodeManagerDeleteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerDeleteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerDeleteArgs proto.InternalMessageInfo

func (m *SupernodeManagerDeleteArgs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SupernodeManagerCreateReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerCreateReply) Reset()         { *m = SupernodeManagerCreateReply{} }
func (m *SupernodeManagerCreateReply) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerCreateReply) ProtoMessage()    {}
func (*SupernodeManagerCreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{4}
}

func (m *SupernodeManagerCreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerCreateReply.Unmarshal(m, b)
}
func (m *SupernodeManagerCreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerCreateReply.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerCreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerCreateReply.Merge(m, src)
}
func (m *SupernodeManagerCreateReply) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerCreateReply.Size(m)
}
func (m *SupernodeManagerCreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerCreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerCreateReply proto.InternalMessageInfo

func (m *SupernodeManagerCreateReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SupernodeManagerListReply struct {
	SupernodesManaged    []*SupernodeManaged `protobuf:"bytes,1,rep,name=SupernodesManaged,proto3" json:"SupernodesManaged,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SupernodeManagerListReply) Reset()         { *m = SupernodeManagerListReply{} }
func (m *SupernodeManagerListReply) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerListReply) ProtoMessage()    {}
func (*SupernodeManagerListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{5}
}

func (m *SupernodeManagerListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerListReply.Unmarshal(m, b)
}
func (m *SupernodeManagerListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerListReply.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerListReply.Merge(m, src)
}
func (m *SupernodeManagerListReply) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerListReply.Size(m)
}
func (m *SupernodeManagerListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerListReply.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerListReply proto.InternalMessageInfo

func (m *SupernodeManagerListReply) GetSupernodesManaged() []*SupernodeManaged {
	if m != nil {
		return m.SupernodesManaged
	}
	return nil
}

type SupernodeManaged struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ListenPort           int64    `protobuf:"varint,2,opt,name=ListenPort,proto3" json:"ListenPort,omitempty"`
	ManagementPort       int64    `protobuf:"varint,3,opt,name=ManagementPort,proto3" json:"ManagementPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManaged) Reset()         { *m = SupernodeManaged{} }
func (m *SupernodeManaged) String() string { return proto.CompactTextString(m) }
func (*SupernodeManaged) ProtoMessage()    {}
func (*SupernodeManaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{6}
}

func (m *SupernodeManaged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManaged.Unmarshal(m, b)
}
func (m *SupernodeManaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManaged.Marshal(b, m, deterministic)
}
func (m *SupernodeManaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManaged.Merge(m, src)
}
func (m *SupernodeManaged) XXX_Size() int {
	return xxx_messageInfo_SupernodeManaged.Size(m)
}
func (m *SupernodeManaged) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManaged.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManaged proto.InternalMessageInfo

func (m *SupernodeManaged) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SupernodeManaged) GetListenPort() int64 {
	if m != nil {
		return m.ListenPort
	}
	return 0
}

func (m *SupernodeManaged) GetManagementPort() int64 {
	if m != nil {
		return m.ManagementPort
	}
	return 0
}

type SupernodeManagerDeleteReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupernodeManagerDeleteReply) Reset()         { *m = SupernodeManagerDeleteReply{} }
func (m *SupernodeManagerDeleteReply) String() string { return proto.CompactTextString(m) }
func (*SupernodeManagerDeleteReply) ProtoMessage()    {}
func (*SupernodeManagerDeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_eee77e6761fc0983, []int{7}
}

func (m *SupernodeManagerDeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SupernodeManagerDeleteReply.Unmarshal(m, b)
}
func (m *SupernodeManagerDeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SupernodeManagerDeleteReply.Marshal(b, m, deterministic)
}
func (m *SupernodeManagerDeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupernodeManagerDeleteReply.Merge(m, src)
}
func (m *SupernodeManagerDeleteReply) XXX_Size() int {
	return xxx_messageInfo_SupernodeManagerDeleteReply.Size(m)
}
func (m *SupernodeManagerDeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SupernodeManagerDeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_SupernodeManagerDeleteReply proto.InternalMessageInfo

func (m *SupernodeManagerDeleteReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*SupernodeManagerCreateArgs)(nil), "gon2n.SupernodeManagerCreateArgs")
	proto.RegisterType((*SupernodeManagerListArgs)(nil), "gon2n.SupernodeManagerListArgs")
	proto.RegisterType((*SupernodeManagerGetArgs)(nil), "gon2n.SupernodeManagerGetArgs")
	proto.RegisterType((*SupernodeManagerDeleteArgs)(nil), "gon2n.SupernodeManagerDeleteArgs")
	proto.RegisterType((*SupernodeManagerCreateReply)(nil), "gon2n.SupernodeManagerCreateReply")
	proto.RegisterType((*SupernodeManagerListReply)(nil), "gon2n.SupernodeManagerListReply")
	proto.RegisterType((*SupernodeManaged)(nil), "gon2n.SupernodeManaged")
	proto.RegisterType((*SupernodeManagerDeleteReply)(nil), "gon2n.SupernodeManagerDeleteReply")
}

func init() { proto.RegisterFile("supernode.proto", fileDescriptor_eee77e6761fc0983) }

var fileDescriptor_eee77e6761fc0983 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x4a, 0xfb, 0x30,
	0x14, 0xc6, 0xbb, 0xf6, 0xff, 0x1f, 0x78, 0x84, 0xa9, 0xb9, 0xd9, 0xac, 0x30, 0x67, 0x2e, 0x64,
	0x82, 0xf6, 0xa2, 0xbe, 0x80, 0xa2, 0x32, 0x86, 0x0a, 0x5a, 0x9f, 0xa0, 0x23, 0x87, 0xa2, 0xcc,
	0xa4, 0xa4, 0xf1, 0xc2, 0x27, 0xf4, 0xb5, 0x24, 0xc9, 0xaa, 0x25, 0x4d, 0x86, 0xb7, 0x39, 0xbf,
	0x73, 0xce, 0xf7, 0x7d, 0x3d, 0x85, 0xbd, 0xe6, 0xa3, 0x46, 0xc9, 0x05, 0xc3, 0xac, 0x96, 0x42,
	0x09, 0xf2, 0xbf, 0x12, 0x3c, 0xe7, 0x94, 0x41, 0xfa, 0xd2, 0x56, 0x1e, 0x4b, 0x5e, 0x56, 0x28,
	0x6f, 0x24, 0x96, 0x0a, 0xaf, 0x65, 0xd5, 0x90, 0x29, 0xc0, 0xc3, 0x6b, 0xa3, 0x90, 0x3f, 0x09,
	0xa9, 0x26, 0x83, 0xd9, 0x60, 0x9e, 0x14, 0x9d, 0x17, 0x72, 0x0a, 0x23, 0xdb, 0xf4, 0x8e, 0x5c,
	0x19, 0x26, 0x36, 0x8c, 0xf3, 0x4a, 0x53, 0x98, 0xb8, 0x5b, 0xf4, 0x14, 0xbd, 0x83, 0x9e, 0xc1,
	0xd8, 0xad, 0x2d, 0xd0, 0x94, 0xc8, 0x08, 0xe2, 0x25, 0x33, 0x6b, 0x77, 0x8a, 0x78, 0xc9, 0xe8,
	0x79, 0x5f, 0xec, 0x2d, 0xae, 0x71, 0x23, 0xd6, 0xa5, 0x2f, 0xe0, 0xc8, 0x6f, 0xad, 0xc0, 0x7a,
	0xfd, 0xd9, 0xc3, 0x57, 0x70, 0xe8, 0xd3, 0x68, 0xe1, 0x3b, 0x38, 0xf8, 0x29, 0x36, 0xb6, 0xaa,
	0x7b, 0x93, 0xf9, 0x6e, 0x3e, 0xce, 0x4c, 0x92, 0x99, 0xd3, 0xcc, 0x8a, 0x7e, 0x07, 0x7d, 0x83,
	0x7d, 0x17, 0x73, 0x75, 0x38, 0x99, 0xc7, 0x7f, 0xc8, 0x3c, 0xf1, 0x66, 0xee, 0xb1, 0x6f, 0xc3,
	0xf2, 0xda, 0xcf, 0xbf, 0xe2, 0x9e, 0x36, 0x49, 0x9e, 0x61, 0x68, 0x23, 0x23, 0x27, 0x7e, 0x97,
	0x9d, 0x63, 0x49, 0xe9, 0x56, 0xc4, 0x6c, 0xa5, 0x11, 0xb9, 0x87, 0x7f, 0xda, 0x0c, 0x39, 0x0e,
	0xd0, 0xed, 0x5d, 0xa4, 0xb3, 0x2d, 0x40, 0x3b, 0xec, 0x0a, 0x92, 0x05, 0x2a, 0x32, 0x0d, 0xa0,
	0x9b, 0x3b, 0x4a, 0x43, 0x9f, 0x88, 0x46, 0xda, 0xa1, 0x4d, 0x25, 0xe8, 0xf0, 0xf7, 0xc2, 0x82,
	0x0e, 0x3b, 0xb9, 0xd2, 0x68, 0x35, 0x34, 0x3f, 0xd8, 0xe5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x8c, 0x3d, 0x84, 0x2e, 0x73, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SupernodeManagerClient is the client API for SupernodeManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SupernodeManagerClient interface {
	Create(ctx context.Context, in *SupernodeManagerCreateArgs, opts ...grpc.CallOption) (*SupernodeManagerCreateReply, error)
	List(ctx context.Context, in *SupernodeManagerListArgs, opts ...grpc.CallOption) (*SupernodeManagerListReply, error)
	Get(ctx context.Context, in *SupernodeManagerGetArgs, opts ...grpc.CallOption) (*SupernodeManaged, error)
	Delete(ctx context.Context, in *SupernodeManagerDeleteArgs, opts ...grpc.CallOption) (*SupernodeManagerDeleteReply, error)
}

type supernodeManagerClient struct {
	cc *grpc.ClientConn
}

func NewSupernodeManagerClient(cc *grpc.ClientConn) SupernodeManagerClient {
	return &supernodeManagerClient{cc}
}

func (c *supernodeManagerClient) Create(ctx context.Context, in *SupernodeManagerCreateArgs, opts ...grpc.CallOption) (*SupernodeManagerCreateReply, error) {
	out := new(SupernodeManagerCreateReply)
	err := c.cc.Invoke(ctx, "/gon2n.SupernodeManager/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supernodeManagerClient) List(ctx context.Context, in *SupernodeManagerListArgs, opts ...grpc.CallOption) (*SupernodeManagerListReply, error) {
	out := new(SupernodeManagerListReply)
	err := c.cc.Invoke(ctx, "/gon2n.SupernodeManager/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supernodeManagerClient) Get(ctx context.Context, in *SupernodeManagerGetArgs, opts ...grpc.CallOption) (*SupernodeManaged, error) {
	out := new(SupernodeManaged)
	err := c.cc.Invoke(ctx, "/gon2n.SupernodeManager/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *supernodeManagerClient) Delete(ctx context.Context, in *SupernodeManagerDeleteArgs, opts ...grpc.CallOption) (*SupernodeManagerDeleteReply, error) {
	out := new(SupernodeManagerDeleteReply)
	err := c.cc.Invoke(ctx, "/gon2n.SupernodeManager/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SupernodeManagerServer is the server API for SupernodeManager service.
type SupernodeManagerServer interface {
	Create(context.Context, *SupernodeManagerCreateArgs) (*SupernodeManagerCreateReply, error)
	List(context.Context, *SupernodeManagerListArgs) (*SupernodeManagerListReply, error)
	Get(context.Context, *SupernodeManagerGetArgs) (*SupernodeManaged, error)
	Delete(context.Context, *SupernodeManagerDeleteArgs) (*SupernodeManagerDeleteReply, error)
}

// UnimplementedSupernodeManagerServer can be embedded to have forward compatible implementations.
type UnimplementedSupernodeManagerServer struct {
}

func (*UnimplementedSupernodeManagerServer) Create(ctx context.Context, req *SupernodeManagerCreateArgs) (*SupernodeManagerCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSupernodeManagerServer) List(ctx context.Context, req *SupernodeManagerListArgs) (*SupernodeManagerListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSupernodeManagerServer) Get(ctx context.Context, req *SupernodeManagerGetArgs) (*SupernodeManaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedSupernodeManagerServer) Delete(ctx context.Context, req *SupernodeManagerDeleteArgs) (*SupernodeManagerDeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterSupernodeManagerServer(s *grpc.Server, srv SupernodeManagerServer) {
	s.RegisterService(&_SupernodeManager_serviceDesc, srv)
}

func _SupernodeManager_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupernodeManagerCreateArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeManagerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gon2n.SupernodeManager/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeManagerServer).Create(ctx, req.(*SupernodeManagerCreateArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupernodeManager_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupernodeManagerListArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeManagerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gon2n.SupernodeManager/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeManagerServer).List(ctx, req.(*SupernodeManagerListArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupernodeManager_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupernodeManagerGetArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeManagerServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gon2n.SupernodeManager/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeManagerServer).Get(ctx, req.(*SupernodeManagerGetArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _SupernodeManager_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupernodeManagerDeleteArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SupernodeManagerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gon2n.SupernodeManager/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SupernodeManagerServer).Delete(ctx, req.(*SupernodeManagerDeleteArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _SupernodeManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gon2n.SupernodeManager",
	HandlerType: (*SupernodeManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SupernodeManager_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _SupernodeManager_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _SupernodeManager_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SupernodeManager_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "supernode.proto",
}
